@model List<BlogApp.Web.Models.UserRoleViewModel>
@using BlogApp.Core.Constants

@{
    ViewData["Title"] = "Admin - User Role Management";
}

<h1>@ViewData["Title"]</h1>
<p>Assign or remove roles for users.</p>
<hr />

@if (TempData["SuccessMessage"] != null)
{
    <div class="alert alert-success">@TempData["SuccessMessage"]</div>
}
@if (TempData["ErrorMessage"] != null)
{
    <div class="alert alert-danger">@TempData["ErrorMessage"]</div>
}
@if (TempData["WarningMessage"] != null)
{
    <div class="alert alert-warning">@TempData["WarningMessage"]</div>
}


@if (!Model.Any())
{
    <p>No users found.</p>
}
else
{
    <table class="table table-striped table-hover table-sm">
        <thead>
            <tr>
                <th>Username</th>
                <th>Email</th>
                <th>Current Roles</th>
                <th style="width: 35%;">Actions</th>
            </tr>
        </thead>
        <tbody>
            @foreach (var user in Model)
            {
                <tr>
                    <td>@user.Username</td>
                    <td>@user.Email</td>
                    <td>
                        @if (user.Roles.Any())
                        {
                            @string.Join(", ", user.Roles)
                        }
                        else
                        {
                            <span class="text-muted">No roles</span>
                        }
                    </td>
                    <td>
                        @if (user.Roles.Contains(AppRoles.Administrator))
                        {
                            <span class="badge bg-info text-dark" title="Administrators have all permissions implicitly.">Admin Access</span>
                        }
                        else
                        {
                            @if (!user.Roles.Contains(AppRoles.Author))
                            {
                                <form asp-action="AssignAuthorRole" method="post" class="d-inline me-1">
                                    @Html.AntiForgeryToken() <input type="hidden" name="userId" value="@user.UserId" />
                                    <button type="submit" class="btn btn-sm btn-outline-success" title="Assign Author Role">Make Author</button>
                                </form>
                            }
                            @if (user.Roles.Contains(AppRoles.Author))
                            {
                                <form asp-action="RemoveAuthorRole" method="post" class="d-inline me-1">
                                    @Html.AntiForgeryToken() <input type="hidden" name="userId" value="@user.UserId" />
                                    <button type="submit" class="btn btn-sm btn-outline-warning" title="Remove Author Role">Remove Author</button>
                                </form>
                            }

                            @if (!user.Roles.Contains(AppRoles.Ranker))
                            {
                                <form asp-action="AssignRankerRole" method="post" class="d-inline me-1">
                                    @Html.AntiForgeryToken() <input type="hidden" name="userId" value="@user.UserId" />
                                    <button type="submit" class="btn btn-sm btn-outline-success" title="Assign Ranker Role">Make Ranker</button>
                                </form>
                            }
                            @if (user.Roles.Contains(AppRoles.Ranker))
                            {
                                <form asp-action="RemoveRankerRole" method="post" class="d-inline me-1">
                                    @Html.AntiForgeryToken() <input type="hidden" name="userId" value="@user.UserId" />
                                    <button type="submit" class="btn btn-sm btn-outline-warning" title="Remove Ranker Role">Remove Ranker</button>
                                </form>
                            }

                            @if (!user.Roles.Contains(AppRoles.Commenter))
                            {
                                <form asp-action="AssignCommenterRole" method="post" class="d-inline me-1">
                                    @Html.AntiForgeryToken() <input type="hidden" name="userId" value="@user.UserId" />
                                    <button type="submit" class="btn btn-sm btn-outline-success" title="Assign Commenter Role">Make Commenter</button>
                                </form>
                            }
                            @if (user.Roles.Contains(AppRoles.Commenter))
                            {
                                <form asp-action="RemoveCommenterRole" method="post" class="d-inline me-1">
                                    @Html.AntiForgeryToken() <input type="hidden" name="userId" value="@user.UserId" />
                                    <button type="submit" class="btn btn-sm btn-outline-warning" title="Remove Commenter Role">Remove Commenter</button>
                                </form>
                            }
                        }
                    </td>
                </tr>
            }
        </tbody>
    </table>
}